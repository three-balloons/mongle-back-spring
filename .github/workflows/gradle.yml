name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SSL_PASSWORD: ${{ secrets.SSL_PASSWORD }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
      MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      MYSQL_DB: ${{ secrets.MYSQL_DB }}
      JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      IAM_ACCESS_KEY: ${{ secrets.IAM_ACCESS_KEY }}
      IAM_SECRET_KEY: ${{ secrets.IAM_SECRET_KEY }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}

    permissions:
      contents: read
      
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Make ssl directory
        run: mkdir ./src/main/resources/ssl
        
      - name: Download keystore
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > ./src/main/resources/ssl/keystore.p12

      - name: Generate application.yml from environment variables
        run: |
          cp ./src/main/resources/application-dev.yml ./src/main/resources/application-dev.yml.bak  # Backup
          envsubst < ./src/main/resources/application-dev.yml.bak > ./src/main/resources/application-dev.yml
          
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew
      
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cicdsample
          path: build/libs/*.jar
          
      - name: Create directory and set permissions on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ubuntu/bubble/back/build/libs
            sudo chmod 777 /home/ubuntu/bubble/back/build/libs

      - name: Copy jar file to remote
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu/bubble/back/build/libs"
          strip_components: 2

      - name: Create directory for deploy script file and set permissions on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /home/ec2-user/cicd
            sudo chmod 777 /home/ec2-user/cicd

      - name: Copy deploy script file to remote
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy.sh"
          target: "/home/ec2-user/cicd"
          
      - name: Execute deploy script
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            sudo chmod +x /home/ec2-user/cicd/deploy.sh
            sudo sh /home/ec2-user/cicd/deploy.sh
            
      - name: Set up port forwarding on remote server
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.SERVER_IP }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 기존 규칙 중 포트 443에 대한 리다이렉트 규칙 삭제
            sudo iptables -t nat -D PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8080
            
            # 새로운 규칙 추가
            sudo iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8080


  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

